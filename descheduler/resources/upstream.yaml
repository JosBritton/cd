---
# Source: descheduler/charts/descheduler/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: descheduler
  namespace: kube-system
  labels:
    app.kubernetes.io/name: descheduler
    helm.sh/chart: descheduler-0.29.0
    app.kubernetes.io/instance: descheduler
    app.kubernetes.io/version: "0.29.0"
    app.kubernetes.io/managed-by: Helm
---
# Source: descheduler/charts/descheduler/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: descheduler
  namespace: kube-system
  labels:
    app.kubernetes.io/name: descheduler
    helm.sh/chart: descheduler-0.29.0
    app.kubernetes.io/instance: descheduler
    app.kubernetes.io/version: "0.29.0"
    app.kubernetes.io/managed-by: Helm
data:
  policy.yaml: |
    apiVersion: "descheduler/v1alpha1"
    kind: "DeschedulerPolicy"
    strategies:
      LowNodeUtilization:
        enabled: true
        params:
          nodeResourceUtilizationThresholds:
            targetThresholds:
              cpu: 50
              memory: 50
              pods: 50
            thresholds:
              cpu: 20
              memory: 20
              pods: 20
      RemoveDuplicates:
        enabled: true
      RemovePodsHavingTooManyRestarts:
        enabled: true
        params:
          podsHavingTooManyRestarts:
            includingInitContainers: true
            podRestartThreshold: 100
      RemovePodsViolatingInterPodAntiAffinity:
        enabled: true
      RemovePodsViolatingNodeAffinity:
        enabled: true
        params:
          nodeAffinityType:
          - requiredDuringSchedulingIgnoredDuringExecution
      RemovePodsViolatingNodeTaints:
        enabled: true
      RemovePodsViolatingTopologySpreadConstraint:
        enabled: true
        params:
          includeSoftConstraints: false
---
# Source: descheduler/charts/descheduler/templates/clusterrole.yaml
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: descheduler
  labels:
    app.kubernetes.io/name: descheduler
    helm.sh/chart: descheduler-0.29.0
    app.kubernetes.io/instance: descheduler
    app.kubernetes.io/version: "0.29.0"
    app.kubernetes.io/managed-by: Helm
rules:
- apiGroups: ["events.k8s.io"]
  resources: ["events"]
  verbs: ["create", "update"]
- apiGroups: [""]
  resources: ["nodes"]
  verbs: ["get", "watch", "list"]
- apiGroups: [""]
  resources: ["namespaces"]
  verbs: ["get", "watch", "list"]
- apiGroups: [""]
  resources: ["pods"]
  verbs: ["get", "watch", "list", "delete"]
- apiGroups: [""]
  resources: ["pods/eviction"]
  verbs: ["create"]
- apiGroups: ["scheduling.k8s.io"]
  resources: ["priorityclasses"]
  verbs: ["get", "watch", "list"]
---
# Source: descheduler/charts/descheduler/templates/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: descheduler
  labels:
    app.kubernetes.io/name: descheduler
    helm.sh/chart: descheduler-0.29.0
    app.kubernetes.io/instance: descheduler
    app.kubernetes.io/version: "0.29.0"
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: descheduler
subjects:
  - kind: ServiceAccount
    name: descheduler
    namespace: kube-system
---
# Source: descheduler/charts/descheduler/templates/cronjob.yaml
apiVersion: batch/v1
kind: CronJob
metadata:
  name: descheduler
  namespace: kube-system
  labels:
    app.kubernetes.io/name: descheduler
    helm.sh/chart: descheduler-0.29.0
    app.kubernetes.io/instance: descheduler
    app.kubernetes.io/version: "0.29.0"
    app.kubernetes.io/managed-by: Helm
spec:
  schedule: "*/2 * * * *"
  concurrencyPolicy: "Forbid"
  jobTemplate:
    spec:
      template:
        metadata:
          name: descheduler
          annotations:
            checksum/config: 4fdfb4371450a276f4700a4d6b8c0b24d283c956ba5895af0b2950391cb9450e
          labels:
            app.kubernetes.io/name: descheduler
            app.kubernetes.io/instance: descheduler
        spec:
          priorityClassName: system-cluster-critical
          serviceAccountName: descheduler
          restartPolicy: "Never"
          containers:
            - name: descheduler
              image: "registry.k8s.io/descheduler/descheduler:v0.29.0"
              imagePullPolicy: IfNotPresent
              command:
                - /bin/descheduler
              args:
                - --policy-config-file=/policy-dir/policy.yaml
                - --v=3
              livenessProbe:
                failureThreshold: 3
                httpGet:
                  path: /healthz
                  port: 10258
                  scheme: HTTPS
                initialDelaySeconds: 3
                periodSeconds: 10
              resources:
                requests:
                  cpu: 500m
                  memory: 256Mi
              securityContext:
                allowPrivilegeEscalation: false
                capabilities:
                  drop:
                  - ALL
                privileged: false
                readOnlyRootFilesystem: true
                runAsNonRoot: true
                runAsUser: 1000
              volumeMounts:
                - mountPath: /policy-dir
                  name: policy-volume
          volumes:
          - name: policy-volume
            configMap:
              name: descheduler
