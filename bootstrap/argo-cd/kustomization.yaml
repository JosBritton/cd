# yaml-language-server: $schema=https://json.schemastore.org/kustomization
apiVersion: kustomize.config.k8s.io/v1beta1
kind: Kustomization
resources:
- ../install  # argo-cd will own itself
- ./resources/cert.yaml
- ./resources/httpproxy.yaml
- ./resources/delegation.yaml
configMapGenerator:
- name: argocd-cm
  behavior: merge
  literals:
  - timeout.reconciliation=15s
- name: argocd-cmd-params-cm
  behavior: merge
  literals:
  - server.insecure=true  # proxy HTTP through HTTPs ingress
patches:
- target:
    kind: Secret
    name: argocd-initial-admin-secret
  patch: |
    $patch: delete
    apiVersion: v1
    kind: Secret
    metadata:
      name: argocd-initial-admin-secret
- target:
    kind: Secret
    name: argocd-secret
  patch: |
    $patch: delete
    apiVersion: v1
    kind: Secret
    metadata:
      name: argocd-secret
- target:
    kind: Deployment
    group: apps
    version: v1
    name: argocd-redis-ha-haproxy
    namespace: argocd
  # Due to anti-affinity in deployment, we must set maxSurge to 0 to force the scheduler to
  # remove existing pods before creating new ones to avoid deadlock.
  patch: |-
    - op: replace
      path: /spec/strategy
      value:
        type: RollingUpdate
        rollingUpdate:
          maxSurge: 0
          maxUnavailable: 1
