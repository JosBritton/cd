apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: radarr
  namespace: radarr
  labels:
    app: radarr
    app.kubernetes.io/name: radarr
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: radarr
  serviceName: radarr
  persistentVolumeClaimRetentionPolicy:
    whenDeleted: Retain
    whenScaled: Retain
  template:
    metadata:
      labels:
        app: radarr
        app.kubernetes.io/name: radarr
    spec:
      serviceAccountName: default
      terminationGracePeriodSeconds: 60
      securityContext:
        runAsUser: 65534
        runAsGroup: 65534
        fsGroup: 65534
        fsGroupChangePolicy: OnRootMismatch
      volumes:
      - name: media
        nfs:
          path: /mnt/artemis/data/media
          server: nas1.private.swifthomelab.net
      - name: movies
        nfs:
          server: nas1.private.swifthomelab.net
          path: /mnt/artemis/data/bt1/completed/movies
      - name: tv
        nfs:
          server: nas1.private.swifthomelab.net
          path: /mnt/artemis/data/bt1/completed/tv
      containers:
      - name: radarr
        image: ghcr.io/onedr0p/radarr:5.8.3@sha256:c8fa12f8efdbcb8ef736b019335c39f4962def9bee479b0fb8b0401824bcf26b
        ports:
        - name: http
          containerPort: 7878
          protocol: TCP
        volumeMounts:
        - mountPath: /config
          name: radarr
        - mountPath: /media
          name: media
        - mountPath: /movies
          name: movies
        - mountPath: /tv
          name: tv
        livenessProbe:
          httpGet:
            port: 7878
            path: /
            scheme: HTTP
          initialDelaySeconds: 60
          failureThreshold: 5
          successThreshold: 1
          timeoutSeconds: 10
          periodSeconds: 10
        readinessProbe:
          httpGet:
            port: 7878
            path: /
            scheme: HTTP
          initialDelaySeconds: 10
          failureThreshold: 5
          successThreshold: 2
          timeoutSeconds: 5
          periodSeconds: 10
        startupProbe:
          tcpSocket:
            port: 7878
          initialDelaySeconds: 10
          failureThreshold: 60
          successThreshold: 1
          timeoutSeconds: 2
          periodSeconds: 5
        resources:
          requests:
            cpu: 10m
            memory: 50Mi
          limits:
            cpu: 1500m
            memory: 2Gi
        env:
        - name: UMASK
          value: "0022"
        - name: TZ
          value: Etc/UTC
        - name: RADARR__PORT
          value: "7878"
  volumeClaimTemplates:
  - metadata:
      name: radarr
      labels:
        app.kubernetes.io/part-of: radarr
      namespace: radarr
    spec:
      storageClassName: proxmox-csi
      accessModes: [ReadWriteOncePod]
      resources:
        requests:
          storage: 8Gi
