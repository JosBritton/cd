kubernetes-dashboard:
  app:
    mode: dashboard
    security:
      # 256-byte dummy csrf key for template idempotency, is ignored with kustomize
      # validate resource is ignored using:
      #    `kustomize build apps/dashboard/upstream | grep -C 6 kubernetes-dashboard-csrf`
      # (should output no "Secret" kind resource)

      # yamllint disable-line rule:quoted-strings
      csrfKey: "0000000000000000000000000000000000000000000000000000000000000000000000000\
        000000000000000000000000000000000000000000000000000000000000000000000000000000000\
        000000000000000000000000000000000000000000000000000000000000000000000000000000000\
        000000000000000000000000000000000000000000000000000000000000000000000000000000000\
        00000000000000000000000000=="
      securityContext:
        runAsNonRoot: true
        seccompProfile:
          type: RuntimeDefault
      containerSecurityContext:
        allowPrivilegeEscalation: false
        readOnlyRootFilesystem: true
        runAsUser: 1001
        runAsGroup: 2001
        capabilities:
          drop: [ALL]
      podDisruptionBudget:
        enabled: false
        minAvailable: 0
        maxUnavailable: 0
      networkPolicy:
        enabled: false
        ingressDenyAll: false
    ingress:
      enabled: false
  auth:
    role: auth
    image:
      repository: docker.io/kubernetesui/dashboard-auth
      tag: 1.2.0
    scaling:
      replicas: 1
      revisionHistoryLimit: 10
    containers:
      ports:
      - name: auth
        containerPort: 8000
        protocol: TCP
      volumeMounts:
      - mountPath: /tmp
        name: tmp-volume
      resources:
        requests:
          cpu: 100m
          memory: 200Mi
        limits:
          cpu: 250m
          memory: 400Mi
    volumes:
    - name: tmp-volume
      emptyDir: {}
  api:
    role: api
    image:
      repository: docker.io/kubernetesui/dashboard-api
      tag: 1.9.0
    scaling:
      replicas: 3
      revisionHistoryLimit: 10
    containers:
      ports:
      - name: api
        containerPort: 8000
        protocol: TCP
      volumeMounts:
      - mountPath: /tmp
        name: tmp-volume
      resources:
        requests:
          cpu: 100m
          memory: 200Mi
        limits:
          cpu: 250m
          memory: 400Mi
    volumes:
    - name: tmp-volume
      emptyDir: {}
  web:
    role: web
    image:
      repository: docker.io/kubernetesui/dashboard-web
      tag: 1.5.1
    scaling:
      replicas: 1
      revisionHistoryLimit: 10
    containers:
      ports:
      - name: web
        containerPort: 8000
        protocol: TCP
      volumeMounts:
      - mountPath: /tmp
        name: tmp-volume
      resources:
        requests:
          cpu: 100m
          memory: 200Mi
        limits:
          cpu: 250m
          memory: 400Mi
    volumes:
    - name: tmp-volume
      emptyDir: {}
  metricsScraper:
    enabled: true
    role: metrics-scraper
    image:
      repository: docker.io/kubernetesui/dashboard-metrics-scraper
      tag: 1.2.0
    scaling:
      replicas: 1
      revisionHistoryLimit: 10
    containers:
      ports:
      - containerPort: 8000
        protocol: TCP
      volumeMounts:
      - mountPath: /tmp
        name: tmp-volume
      resources:
        requests:
          cpu: 100m
          memory: 200Mi
        limits:
          cpu: 250m
          memory: 400Mi
      livenessProbe:
        httpGet:
          scheme: HTTP
          path: /
          port: 8000
        initialDelaySeconds: 30
        timeoutSeconds: 30
    volumes:
    - name: tmp-volume
      emptyDir: {}
  metrics-server:
    enabled: false
  kong:
    enabled: false
  cert-manager:
    enabled: false
  nginx:
    enabled: false
  extras:
    serviceMonitor:
      enabled: true
      scheme: https
      tlsConfig:
        insecureSkipVerify: true
