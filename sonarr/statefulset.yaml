apiVersion: apps/v1
kind: "StatefulSet"
metadata:
  name: sonarr
  namespace: sonarr
  labels:
    app: "sonarr"
    app.kubernetes.io/name: "sonarr"
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: sonarr
  persistentVolumeClaimRetentionPolicy:
    whenDeleted: Retain
    whenScaled: Retain
  template:
    metadata:
      labels:
        app: "sonarr"
        app.kubernetes.io/name: "sonarr"
    spec:
      serviceAccountName: default
      terminationGracePeriodSeconds: 60
      securityContext:
        runAsUser: 65534
        runAsGroup: 65534
        fsGroup: 65534
        fsGroupChangePolicy: OnRootMismatch
      volumes:
      - name: media
        nfs:
          path: /mnt/artemis/data/media
          server: truenas.private.swifthomelab.net
      - name: movies
        nfs:
          server: truenas.private.swifthomelab.net
          path: /mnt/artemis/data/bt1/completed/movies
      - name: tv
        nfs:
          server: truenas.private.swifthomelab.net
          path: /mnt/artemis/data/bt1/completed/tv
      containers:
        - name: sonarr
          image: ghcr.io/onedr0p/sonarr:4.0.5.1710@sha256:5d97c1e4d7d386e3d9a887d87d65da2b0115c73cd002d7d633df21baa5a4122c
          ports:
            - name: http
              containerPort: 8989
              protocol: TCP
          volumeMounts:
            - mountPath: /config
              name: sonarr
            - mountPath: /media
              name: media
            - mountPath: /movies
              name: movies
            - mountPath: /tv
              name: tv
          livenessProbe:
            httpGet:
              port: 8989
              path: /
              scheme: HTTP
            initialDelaySeconds: 60
            failureThreshold: 5
            successThreshold: 1
            timeoutSeconds: 10
            periodSeconds: 10
          readinessProbe:
            httpGet:
              port: 8989
              path: /
              scheme: HTTP
            initialDelaySeconds: 10
            failureThreshold: 5
            successThreshold: 2
            timeoutSeconds: 5
            periodSeconds: 10
          startupProbe:
            tcpSocket:
              port: 8989
            initialDelaySeconds: 10
            failureThreshold: 60
            successThreshold: 1
            timeoutSeconds: 2
            periodSeconds: 5
          resources:
            requests:
              cpu: 10m
              memory: 50Mi
            limits:
              cpu: 1500m
              memory: 2Gi
          env:
            - name: "UMASK"
              value: "0022"
            - name: "TZ"
              value: "Etc/UTC"
            - name: "SONARR__PORT"
              value: "8989"
  volumeClaimTemplates:
    - metadata:
        name: sonarr
        labels:
          app.kubernetes.io/part-of: "sonarr"
        namespace: sonarr
      spec:
        storageClassName: proxmox-csi
        accessModes: [ "ReadWriteOncePod" ]
        resources:
          requests:
            storage: 8Gi
